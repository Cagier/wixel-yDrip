-- switch on red led
gpio.mode(14, gpio.OUTPUT) gpio.write(14, gpio.LOW)
gpio.mode(3, gpio.OUTPUT) gpio.write(3, gpio.HIGH)
gpio.mode(3, gpio.OUTPUT) gpio.write(3, gpio.LOW)
gpio.mode(5, gpio.OUTPUT) gpio.write(5, gpio.LOW)
gpio.mode(5, gpio.OUTPUT) gpio.write(5, gpio.HIGH)

-- set as client (really only need to do this once ever buyt may never have been done before)
wifi.setmode(wifi.STATION)

wifi.sta.config("Intersect_1","Alongkey123")	-- set up home wifi network parameters
wifi.sta.connect()				-- conenct to home network
tmr.delay(1000000)				-- wait 1,000,000 us = 1 second


sk=net.createConnection(net.TCP, 0)		-- create an output tcp connection
sk:on("receive", function(sck, c) print(c) end ) -- function to send stuff
sk:connect(17611,"Intersecting.duckdns.org")	-- connect to dexie server
sk:send("xDrip2g: Geordan 24 69ESP 92256 88688 215 -60 54 -6.234567,53.123456\r\n")
sk:close()					-- close connection

-- switch off red led
gpio.write(3, gpio.HIGH)

node.dsleep(30000000)

node.dsleep(10000000)				-- deep sleep 10 seconds (change to 240 later)
gpio.write(3, gpio.LOW)

node.dsleep(100000)
node.sleep(3000)

--------------- Original code below ---------------------------

while 1 do
  gpio.write(3, gpio.HIGH)
  tmr.delay(1000000)   -- wait 1,000,000 us = 1 second
  gpio.write(3, gpio.LOW)
  tmr.delay(1000000)   -- wait 1,000,000 us = 1 second
end


wifi.sta.config("accesspointname","yourpassword")
wifi.sta.connect()
tmr.delay(1000000)   -- wait 1,000,000 us = 1 second
print(wifi.sta.status())
print(wifi.sta.getip())


-- print(wifi.sta.status())
-- print(wifi.sta.getip())

-- print("sent to server")			(Do not need anything sent back to wic=xel)
-- end (This is nto required and gives an error)

sk=net.createConnection(net.TCP, 0)
sk:on("receive", function(sck, c) print(c) end )
sk:connect(80,"207.58.139.247")
sk:send("GET /testwifi/index.html HTTP/1.1\r\nHost: www.adafruit.com\r\nConnection: keep-alive\r\nAccept: */*\r\n\r\n")


sk:send("xDrip2g(AES): 32303136303931303232303230350cd1 4207
e9db22e217efe50da865a83b4d2155f837029e8500bb3249d55f1dce30ac2e8700c396fbd00d512a
1eead090e0db110ead6d59a19f1c0329dbaf03982c2c")

AES Encrypted Ciphertext >>> xDrip2g(AES): 32303136303931303232303230350cd1 4207
e9db22e217efe50da865a83b4d2155f837029e8500bb3249d55f1dce30ac2e8700c396fbd00d512a
1eead090e0db110ead6d59a19f1c0329dbaf03982c2c




wifi.sta.config("accesspointname","yourpassword")
wifi.sta.connect()
tmr.delay(1000000)   -- wait 1,000,000 us = 1 second
print(wifi.sta.status())
print(wifi.sta.getip())

if ((wifi.sta.status()) == 5) then print "yes" elseif (1 == 2) then print "no" end

if ((wifi.sta.status()) ~= 5) then elseif (1 ~= 2) then print "no" end

tmr.delay(1000000) print(wifi.sta.status()) tmr.delay(1000000) print(wifi.sta.getip())



wifi.sta.config("Intersect_2","Alongkey123") wifi.sta.connect()  tmr.delay(1000000)
if ((wifi.sta.status()) ~= 5) then wifi.sta.config("Intersect_3","Alongkey123") tmr.delay(3000000) wifi.sta.connect() print(wifi.sta.status())
if ((wifi.sta.status()) ~= 5) then wifi.sta.config("Intersect_4","Alongkey123") tmr.delay(3000000) wifi.sta.connect() print(wifi.sta.status())
if ((wifi.sta.status()) ~= 5) then wifi.sta.config("Intersect_1","Alongkey123") tmr.delay(3000000) wifi.sta.connect() print(wifi.sta.status())
end end end

wifi.sta.config("Intersect_1","Alongkey123") wifi.sta.connect()  tmr.delay(1000000) print(wifi.sta.status())


wifi.sta.disconnect() wifi.sta.config("Intersect_2","Alongkey123") wifi.sta.connect()  tmr.delay(5000000) print(wifi.sta.status()) wifi.sta.config("Intersect_1","Alongkey123") wifi.sta.connect() tmr.delay(1000000) print(wifi.sta.status()) tmr.delay(1000000) print(wifi.sta.status()) tmr.delay(1000000) print(wifi.sta.status()) tmr.delay(1000000) print(wifi.sta.status()) tmr.delay(1000000) print(wifi.sta.status()) tmr.delay(1000000) print(wifi.sta.status()) tmr.delay(1000000) print(wifi.sta.status()) tmr.delay(1000000) print(wifi.sta.status()) tmr.delay(1000000) print(wifi.sta.status())
wifi.sta.disconnect() wifi.sta.config("Intersect_2","Alongkey123") wifi.sta.connect()  tmr.delay(5000000) print(wifi.sta.status()) wifi.sta.config("Intersect_1","Alongkey123") wifi.sta.connect() tmr.delay(5000000) print(wifi.sta.status()) tmr.delay(1000000) print(wifi.sta.status()) tmr.delay(1000000) print(wifi.sta.status()) tmr.delay(2000000) print(wifi.sta.status()) tmr.delay(1000000) print(wifi.sta.status()) tmr.delay(1000000) print(wifi.sta.status())
wifi.sta.disconnect()



wifi.sta.disconnect() wifi.sta.config("Intersect_1","Alongkey123") wifi.sta.connect()  tmr.delay(5000000) print(wifi.sta.status()) wifi.sta.config("Intersect_2","Alongkey123") wifi.sta.connect() tmr.delay(5000000) print(wifi.sta.status())



wifi.sta.disconnect()
wifi.sta.config("Intersect_4","Alongkey123") wifi.sta.connect()  local i=1 while (i < 10 ) and ((wifi.sta.status()) ~= 5) do print (i) tmr.delay(1000000) print(wifi.sta.status()) i = (i + 1) end
wifi.sta.config("Intersect_3","Alongkey123") wifi.sta.connect()  tmr.delay(5000000) print(wifi.sta.status())
wifi.sta.config("Intersect_1","Alongkey123") wifi.sta.connect()  tmr.delay(10000000) print(wifi.sta.status())
wifi.sta.config("Intersect_2","Alongkey123") wifi.sta.connect()  tmr.delay(5000000) print(wifi.sta.status())
print(wifi.sta.status())


wifi.setmode(wifi.STATION)
wifi.sta.disconnect()

wifi.sta.config("Intersect_4","Alongkey123") wifi.sta.connect()  local i=1 while (i < 10 ) and ((wifi.sta.status()) ~= 5) do print (i) tmr.delay(1000000) print(wifi.sta.status()) i = (i + 1) end
wifi.sta.config("Intersect_1","Alongkey123") wifi.sta.connect()  local i=1 while (i < 5 ) and ((wifi.sta.status()) ~= 5) do print (i) tmr.delay(10000000) print(wifi.sta.status()) i = (i + 1) end

print(wifi.sta.status())

local i=1 while (i < 10) and (i < 9) do print (i) print(wifi.sta.status()) i = (i + 1) end


wifi.sta.connect()
wifi.sta.disconnect()

if ((wifi.sta.status()) ~= 5) then wifi.sta.config("Intersect_3","Alongkey123") tmr.delay(3000000) wifi.sta.connect() else print(wifi.sta.status()) end
if ((wifi.sta.status()) ~= 5) then wifi.sta.config("Intersect_1","Alongkey123") tmr.delay(3000000) wifi.sta.connect() else print(wifi.sta.status()) end
if ((wifi.sta.status()) ~= 5) then tmr.delay(5000000) end
print(wifi.sta.status())
if ((wifi.sta.status()) ~= 5) then tmr.delay(5000000) end



if ((wifi.sta.status()) ~= 5) then wifi.sta.config("Intersect_1","Alongkey123") wifi.sta.connect() end


wifi.sta.disconnect()
do conn_wifi()

local function conn_wifi()
if ((wifi.sta.status()) ~= 5) then wifi.sta.config("Intersect_3","Alongkey123")wifi.sta.connect() end
if ((wifi.sta.status()) ~= 5) then tmr.delay(3000000) end
print(wifi.sta.status())
if ((wifi.sta.status()) ~= 5) then wifi.sta.config("Intersect_2","Alongkey123")wifi.sta.connect() end
if ((wifi.sta.status()) ~= 5) then tmr.delay(3000000) end
print(wifi.sta.status())
if ((wifi.sta.status()) ~= 5) then wifi.sta.config("Intersect_1","Alongkey123")wifi.sta.connect() end
if ((wifi.sta.status()) ~= 5) then tmr.delay(3000000) end
print(wifi.sta.status())
end

if ((wifi.sta.status()) ~= 5) then wifi.sta.config("Intersect_4","Alongkey123")wifi.sta.connect() end
if ((wifi.sta.status()) ~= 5) tmr.delay(3000000) end



for k,v in pairs(file.list()) do l = string.format("%-15s",k) print(l.."   "..v.." bytes") end


file.open("googletime.lua")

file.open("init.lua")

print(file.readline())
file.close()

wifi.sta.connect()

dofile("googletime.lua")





> file.open("googletime.lua")
> print(file.readline())
connG=net.createConnection(net.TCP, 0)

connG:on("connection",function(conn, payload)

connG:send("HEAD / HTTP/1.1\r\nHost: google.com\r\nAccept: */*\r\n"..
"User-Agent: Mozilla/4.0 (compatible; esp8266 Lua;)\r\n\r\n")
 end)

//	conn:on("connection",function(conn, payload)
//            conn:send("HEAD / HTTP/1.1\r\n".. 
//                      "Host: google.com\r\n"..
//                      "Accept: */*\r\n"..
//                      "User-Agent: Mozilla/4.0 (compatible; esp8266 Lua;)"..
//                      "\r\n\r\n") 
//            end)







connG:on("receive", function(connG, payload)
print(string.sub(payload,string.find(payload,"Date:")+18,string.find(payload,"Date:")+21)..
string.sub(payload,string.find(payload,"Date:")+15,string.find(payload,"Date:")+16)..
string.sub(payload,string.find(payload,"Date:")+11,string.find(payload,"Date:")+12)..


//	conn:on("receive", function(conn, payload)
//		print('\nRetrieved in '..((tmr.now()-t)/1000)..' milliseconds.')
//    	print('Google says it is '..string.sub(payload,string.find(payload,"Date: ")
//           +6,string.find(payload,"Date: ")+35))

connG:connect(80,'google.com')


From readline:
connG=net.createConnection(net.TCP, 0)
connG:on("connection",function(conn, payload)
connG:send("HEAD / HTTP/1.1\r\nHost: google.com\r\nAccept: */*\r\n"..
"User-Agent: Mozilla/4.0 (compatible; esp8266 Lua;)\r\n\r\n") end)
connG:on("receive", function(connG, payload)
print(string.sub(payload,string.find(payload,"Date:")+18,string.find(payload,"Date:")+21)..
string.sub(payload,string.find(payload,"Date:")+15,string.find(payload,"Date:")+16)..
string.sub(payload,string.find(payload,"Date:")+11,string.find(payload,"Date:")+12)..
string.sub(payload,string.find(payload,"Date:")+23,string.find(payload,"Date:")+24)..

gpio.write(3, gpio.HIGH)

66696C652E72656D6F76652822696E69742E6C75612229200D0A

> NodeMCU 0.9.5 build 20150318  powered by Lua 5.1.4
> stdin:1: malformed number near '0.9.5'
> stdin:1: unexpected symbol near '>'


