M:aes
F:Faes$getSBoxValue$0$0({2}DF,SC:U),C,0,0,0,0,0
F:Faes$KeyExpansion$0$0({2}DF,SV:S),C,0,0,0,0,0
F:Faes$AddRoundKey$0$0({2}DF,SV:S),C,0,0,0,0,0
F:Faes$SubBytes$0$0({2}DF,SV:S),C,0,0,0,0,0
F:Faes$ShiftRows$0$0({2}DF,SV:S),C,0,0,0,0,0
F:Faes$xtime$0$0({2}DF,SC:U),C,0,0,0,0,0
F:Faes$Multiply$0$0({2}DF,SC:U),C,0,0,0,0,0
F:Faes$Cipher$0$0({2}DF,SV:S),C,0,0,0,0,0
F:Faes$BlockCopy$0$0({2}DF,SV:S),C,0,0,0,0,0
F:Faes$XorWithIv$0$0({2}DF,SV:S),C,0,0,0,0,0
F:G$AES128_CBC_encrypt_buffer$0$0({2}DF,SV:S),Z,0,0,0,0,0
S:Laes.KeyExpansion$sloc0$1$0({1}SC:U),E,0,0
S:Laes.KeyExpansion$sloc1$1$0({2}DX,SC:U),E,0,0
S:Laes.KeyExpansion$sloc2$1$0({4}SL:U),E,0,0
S:Laes.KeyExpansion$sloc3$1$0({4}SL:U),E,0,0
S:Laes.KeyExpansion$sloc4$1$0({4}SL:U),E,0,0
S:Laes.Cipher$sloc0$1$0({1}SC:U),E,0,0
S:Laes.Cipher$sloc1$1$0({1}SC:U),E,0,0
S:Laes.Cipher$sloc2$1$0({2}DX,SC:U),E,0,0
S:Laes.AES128_CBC_encrypt_buffer$sloc0$1$0({4}SL:U),E,0,0
S:Laes.AES128_CBC_encrypt_buffer$sloc1$1$0({2}DX,SC:U),E,0,0
S:Laes.AES128_CBC_encrypt_buffer$sloc2$1$0({4}SL:U),E,0,0
S:Laes.AES128_CBC_encrypt_buffer$sloc3$1$0({3}DG,SC:U),E,0,0
S:Faes$state$0$0({2}DX,DA4,DA4,SC:U),P,0,0
S:Faes$Key$0$0({2}DX,SC:U),P,0,0
S:Faes$Iv$0$0({2}DX,SC:U),P,0,0
S:Laes.BlockCopy$input$1$1({3}DG,SC:U),P,0,0
S:Laes.BlockCopy$output$1$1({3}DG,SC:U),P,0,0
S:Laes.XorWithIv$buf$1$1({2}DX,SC:U),R,0,0,[r6,r7]
S:Faes$RoundKey$0$0({176}DA176,SC:U),F,0,0
S:Laes.getSBoxValue$num$1$1({1}SC:U),F,0,0
S:Laes.KeyExpansion$i$1$1({4}SL:U),F,0,0
S:Laes.KeyExpansion$j$1$1({4}SL:U),F,0,0
S:Laes.KeyExpansion$k$1$1({4}SL:U),F,0,0
S:Laes.KeyExpansion$tempa$1$1({4}DA4,SC:U),F,0,0
S:Laes.AddRoundKey$round$1$1({1}SC:U),F,0,0
S:Laes.AddRoundKey$i$1$1({1}SC:U),F,0,0
S:Laes.AddRoundKey$j$1$1({1}SC:U),F,0,0
S:Laes.SubBytes$i$1$1({1}SC:U),F,0,0
S:Laes.SubBytes$j$1$1({1}SC:U),F,0,0
S:Laes.ShiftRows$temp$1$1({1}SC:U),F,0,0
S:Laes.xtime$x$1$1({1}SC:U),F,0,0
S:Laes.Multiply$y$1$1({1}SC:U),F,0,0
S:Laes.Multiply$x$1$1({1}SC:U),F,0,0
S:Laes.Cipher$round$1$1({1}SC:U),F,0,0
S:Laes.Cipher$i$1$1({1}SC:U),F,0,0
S:Laes.Cipher$k$1$1({1}SC:U),F,0,0
S:Laes.Cipher$Tmp$1$1({1}SC:U),F,0,0
S:Laes.Cipher$Tm$1$1({1}SC:U),F,0,0
S:Laes.Cipher$t$1$1({1}SC:U),F,0,0
S:Laes.BlockCopy$i$1$1({1}SC:U),F,0,0
S:Laes.XorWithIv$i$1$1({1}SC:U),F,0,0
S:Laes.AES128_CBC_encrypt_buffer$input$1$1({2}DX,SC:U),F,0,0
S:Laes.AES128_CBC_encrypt_buffer$length$1$1({4}SL:U),F,0,0
S:Laes.AES128_CBC_encrypt_buffer$key$1$1({2}DX,SC:U),F,0,0
S:Laes.AES128_CBC_encrypt_buffer$iv$1$1({2}DX,SC:U),F,0,0
S:Laes.AES128_CBC_encrypt_buffer$output$1$1({2}DX,SC:U),F,0,0
S:Laes.AES128_CBC_encrypt_buffer$i$1$1({4}SL:U),F,0,0
S:Laes.AES128_CBC_encrypt_buffer$remainders$1$1({1}SC:U),F,0,0
S:G$memcpy$0$0({2}DF,DG,SV:S),C,0,0
S:G$memmove$0$0({2}DF,DG,SV:S),C,0,0
S:G$strcpy$0$0({2}DF,DG,SC:S),C,0,0
S:G$strncpy$0$0({2}DF,DG,SC:S),C,0,0
S:G$strcat$0$0({2}DF,DG,SC:S),C,0,0
S:G$strncat$0$0({2}DF,DG,SC:S),C,0,0
S:G$memcmp$0$0({2}DF,SI:S),C,0,0
S:G$strcmp$0$0({2}DF,SI:S),C,0,0
S:G$strncmp$0$0({2}DF,SI:S),C,0,0
S:G$strxfrm$0$0({2}DF,SI:U),C,0,0
S:G$memchr$0$0({2}DF,DG,SV:S),C,0,0
S:G$strchr$0$0({2}DF,DG,SC:S),C,0,0
S:G$strcspn$0$0({2}DF,SI:U),C,0,0
S:G$strpbrk$0$0({2}DF,DG,SC:S),C,0,0
S:G$strrchr$0$0({2}DF,DG,SC:S),C,0,0
S:G$strspn$0$0({2}DF,SI:U),C,0,0
S:G$strstr$0$0({2}DF,DG,SC:S),C,0,0
S:G$strtok$0$0({2}DF,DG,SC:S),C,0,0
S:G$memset$0$0({2}DF,DG,SV:S),C,0,0
S:G$strlen$0$0({2}DF,SI:U),C,0,0
S:G$randomSeedFromAdc$0$0({2}DF,SV:S),C,0,0
S:G$randomSeedFromSerialNumber$0$0({2}DF,SV:S),C,0,0
S:G$randomNumber$0$0({2}DF,SC:U),C,0,0
S:G$randomSeed$0$0({2}DF,SV:S),C,0,0
S:Faes$getSBoxValue$0$0({2}DF,SC:U),C,0,0
S:Faes$KeyExpansion$0$0({2}DF,SV:S),C,0,0
S:Faes$AddRoundKey$0$0({2}DF,SV:S),C,0,0
S:Faes$SubBytes$0$0({2}DF,SV:S),C,0,0
S:Faes$ShiftRows$0$0({2}DF,SV:S),C,0,0
S:Faes$xtime$0$0({2}DF,SC:U),C,0,0
S:Faes$Multiply$0$0({2}DF,SC:U),C,0,0
S:Faes$Cipher$0$0({2}DF,SV:S),C,0,0
S:Faes$BlockCopy$0$0({2}DF,SV:S),C,0,0
S:Faes$XorWithIv$0$0({2}DF,SV:S),C,0,0
S:Faes$sbox$0$0({256}DA256,SC:U),D,0,0
S:Faes$Rcon$0$0({255}DA255,SC:U),D,0,0
