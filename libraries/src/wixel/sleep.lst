                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.1.0 #7066 (Nov 22 2011) (MINGW32)
                              4 ; This file was generated Sat Jan 23 21:06:09 2016
                              5 ;--------------------------------------------------------
                              6 	.module sleep
                              7 	.optsdcc -mmcs51 --model-medium
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _boardClockInit
                             13 	.globl _dmaDesc
                             14 	.globl _PM3_BUF
                             15 	.globl _PM2_BUF
                             16 	.globl _sleepInit
                             17 	.globl _ISR_ST
                             18 	.globl _switchToRCOSC
                             19 	.globl _sleepMode1
                             20 	.globl _sleepMode2
                             21 	.globl _sleepMode3
                             22 ;--------------------------------------------------------
                             23 ; special function registers
                             24 ;--------------------------------------------------------
                             25 	.area RSEG    (ABS,DATA)
   0000                      26 	.org 0x0000
                    0080     27 Fsleep$P0$0$0 == 0x0080
                    0080     28 _P0	=	0x0080
                    0081     29 Fsleep$SP$0$0 == 0x0081
                    0081     30 _SP	=	0x0081
                    0082     31 Fsleep$DPL0$0$0 == 0x0082
                    0082     32 _DPL0	=	0x0082
                    0083     33 Fsleep$DPH0$0$0 == 0x0083
                    0083     34 _DPH0	=	0x0083
                    0084     35 Fsleep$DPL1$0$0 == 0x0084
                    0084     36 _DPL1	=	0x0084
                    0085     37 Fsleep$DPH1$0$0 == 0x0085
                    0085     38 _DPH1	=	0x0085
                    0086     39 Fsleep$U0CSR$0$0 == 0x0086
                    0086     40 _U0CSR	=	0x0086
                    0087     41 Fsleep$PCON$0$0 == 0x0087
                    0087     42 _PCON	=	0x0087
                    0088     43 Fsleep$TCON$0$0 == 0x0088
                    0088     44 _TCON	=	0x0088
                    0089     45 Fsleep$P0IFG$0$0 == 0x0089
                    0089     46 _P0IFG	=	0x0089
                    008A     47 Fsleep$P1IFG$0$0 == 0x008a
                    008A     48 _P1IFG	=	0x008a
                    008B     49 Fsleep$P2IFG$0$0 == 0x008b
                    008B     50 _P2IFG	=	0x008b
                    008C     51 Fsleep$PICTL$0$0 == 0x008c
                    008C     52 _PICTL	=	0x008c
                    008D     53 Fsleep$P1IEN$0$0 == 0x008d
                    008D     54 _P1IEN	=	0x008d
                    008F     55 Fsleep$P0INP$0$0 == 0x008f
                    008F     56 _P0INP	=	0x008f
                    0090     57 Fsleep$P1$0$0 == 0x0090
                    0090     58 _P1	=	0x0090
                    0091     59 Fsleep$RFIM$0$0 == 0x0091
                    0091     60 _RFIM	=	0x0091
                    0092     61 Fsleep$DPS$0$0 == 0x0092
                    0092     62 _DPS	=	0x0092
                    0093     63 Fsleep$MPAGE$0$0 == 0x0093
                    0093     64 _MPAGE	=	0x0093
                    0095     65 Fsleep$ENDIAN$0$0 == 0x0095
                    0095     66 _ENDIAN	=	0x0095
                    0098     67 Fsleep$S0CON$0$0 == 0x0098
                    0098     68 _S0CON	=	0x0098
                    009A     69 Fsleep$IEN2$0$0 == 0x009a
                    009A     70 _IEN2	=	0x009a
                    009B     71 Fsleep$S1CON$0$0 == 0x009b
                    009B     72 _S1CON	=	0x009b
                    009C     73 Fsleep$T2CT$0$0 == 0x009c
                    009C     74 _T2CT	=	0x009c
                    009D     75 Fsleep$T2PR$0$0 == 0x009d
                    009D     76 _T2PR	=	0x009d
                    009E     77 Fsleep$T2CTL$0$0 == 0x009e
                    009E     78 _T2CTL	=	0x009e
                    00A0     79 Fsleep$P2$0$0 == 0x00a0
                    00A0     80 _P2	=	0x00a0
                    00A1     81 Fsleep$WORIRQ$0$0 == 0x00a1
                    00A1     82 _WORIRQ	=	0x00a1
                    00A2     83 Fsleep$WORCTRL$0$0 == 0x00a2
                    00A2     84 _WORCTRL	=	0x00a2
                    00A3     85 Fsleep$WOREVT0$0$0 == 0x00a3
                    00A3     86 _WOREVT0	=	0x00a3
                    00A4     87 Fsleep$WOREVT1$0$0 == 0x00a4
                    00A4     88 _WOREVT1	=	0x00a4
                    00A5     89 Fsleep$WORTIME0$0$0 == 0x00a5
                    00A5     90 _WORTIME0	=	0x00a5
                    00A6     91 Fsleep$WORTIME1$0$0 == 0x00a6
                    00A6     92 _WORTIME1	=	0x00a6
                    00A8     93 Fsleep$IEN0$0$0 == 0x00a8
                    00A8     94 _IEN0	=	0x00a8
                    00A9     95 Fsleep$IP0$0$0 == 0x00a9
                    00A9     96 _IP0	=	0x00a9
                    00AB     97 Fsleep$FWT$0$0 == 0x00ab
                    00AB     98 _FWT	=	0x00ab
                    00AC     99 Fsleep$FADDRL$0$0 == 0x00ac
                    00AC    100 _FADDRL	=	0x00ac
                    00AD    101 Fsleep$FADDRH$0$0 == 0x00ad
                    00AD    102 _FADDRH	=	0x00ad
                    00AE    103 Fsleep$FCTL$0$0 == 0x00ae
                    00AE    104 _FCTL	=	0x00ae
                    00AF    105 Fsleep$FWDATA$0$0 == 0x00af
                    00AF    106 _FWDATA	=	0x00af
                    00B1    107 Fsleep$ENCDI$0$0 == 0x00b1
                    00B1    108 _ENCDI	=	0x00b1
                    00B2    109 Fsleep$ENCDO$0$0 == 0x00b2
                    00B2    110 _ENCDO	=	0x00b2
                    00B3    111 Fsleep$ENCCS$0$0 == 0x00b3
                    00B3    112 _ENCCS	=	0x00b3
                    00B4    113 Fsleep$ADCCON1$0$0 == 0x00b4
                    00B4    114 _ADCCON1	=	0x00b4
                    00B5    115 Fsleep$ADCCON2$0$0 == 0x00b5
                    00B5    116 _ADCCON2	=	0x00b5
                    00B6    117 Fsleep$ADCCON3$0$0 == 0x00b6
                    00B6    118 _ADCCON3	=	0x00b6
                    00B8    119 Fsleep$IEN1$0$0 == 0x00b8
                    00B8    120 _IEN1	=	0x00b8
                    00B9    121 Fsleep$IP1$0$0 == 0x00b9
                    00B9    122 _IP1	=	0x00b9
                    00BA    123 Fsleep$ADCL$0$0 == 0x00ba
                    00BA    124 _ADCL	=	0x00ba
                    00BB    125 Fsleep$ADCH$0$0 == 0x00bb
                    00BB    126 _ADCH	=	0x00bb
                    00BC    127 Fsleep$RNDL$0$0 == 0x00bc
                    00BC    128 _RNDL	=	0x00bc
                    00BD    129 Fsleep$RNDH$0$0 == 0x00bd
                    00BD    130 _RNDH	=	0x00bd
                    00BE    131 Fsleep$SLEEP$0$0 == 0x00be
                    00BE    132 _SLEEP	=	0x00be
                    00C0    133 Fsleep$IRCON$0$0 == 0x00c0
                    00C0    134 _IRCON	=	0x00c0
                    00C1    135 Fsleep$U0DBUF$0$0 == 0x00c1
                    00C1    136 _U0DBUF	=	0x00c1
                    00C2    137 Fsleep$U0BAUD$0$0 == 0x00c2
                    00C2    138 _U0BAUD	=	0x00c2
                    00C4    139 Fsleep$U0UCR$0$0 == 0x00c4
                    00C4    140 _U0UCR	=	0x00c4
                    00C5    141 Fsleep$U0GCR$0$0 == 0x00c5
                    00C5    142 _U0GCR	=	0x00c5
                    00C6    143 Fsleep$CLKCON$0$0 == 0x00c6
                    00C6    144 _CLKCON	=	0x00c6
                    00C7    145 Fsleep$MEMCTR$0$0 == 0x00c7
                    00C7    146 _MEMCTR	=	0x00c7
                    00C9    147 Fsleep$WDCTL$0$0 == 0x00c9
                    00C9    148 _WDCTL	=	0x00c9
                    00CA    149 Fsleep$T3CNT$0$0 == 0x00ca
                    00CA    150 _T3CNT	=	0x00ca
                    00CB    151 Fsleep$T3CTL$0$0 == 0x00cb
                    00CB    152 _T3CTL	=	0x00cb
                    00CC    153 Fsleep$T3CCTL0$0$0 == 0x00cc
                    00CC    154 _T3CCTL0	=	0x00cc
                    00CD    155 Fsleep$T3CC0$0$0 == 0x00cd
                    00CD    156 _T3CC0	=	0x00cd
                    00CE    157 Fsleep$T3CCTL1$0$0 == 0x00ce
                    00CE    158 _T3CCTL1	=	0x00ce
                    00CF    159 Fsleep$T3CC1$0$0 == 0x00cf
                    00CF    160 _T3CC1	=	0x00cf
                    00D0    161 Fsleep$PSW$0$0 == 0x00d0
                    00D0    162 _PSW	=	0x00d0
                    00D1    163 Fsleep$DMAIRQ$0$0 == 0x00d1
                    00D1    164 _DMAIRQ	=	0x00d1
                    00D2    165 Fsleep$DMA1CFGL$0$0 == 0x00d2
                    00D2    166 _DMA1CFGL	=	0x00d2
                    00D3    167 Fsleep$DMA1CFGH$0$0 == 0x00d3
                    00D3    168 _DMA1CFGH	=	0x00d3
                    00D4    169 Fsleep$DMA0CFGL$0$0 == 0x00d4
                    00D4    170 _DMA0CFGL	=	0x00d4
                    00D5    171 Fsleep$DMA0CFGH$0$0 == 0x00d5
                    00D5    172 _DMA0CFGH	=	0x00d5
                    00D6    173 Fsleep$DMAARM$0$0 == 0x00d6
                    00D6    174 _DMAARM	=	0x00d6
                    00D7    175 Fsleep$DMAREQ$0$0 == 0x00d7
                    00D7    176 _DMAREQ	=	0x00d7
                    00D8    177 Fsleep$TIMIF$0$0 == 0x00d8
                    00D8    178 _TIMIF	=	0x00d8
                    00D9    179 Fsleep$RFD$0$0 == 0x00d9
                    00D9    180 _RFD	=	0x00d9
                    00DA    181 Fsleep$T1CC0L$0$0 == 0x00da
                    00DA    182 _T1CC0L	=	0x00da
                    00DB    183 Fsleep$T1CC0H$0$0 == 0x00db
                    00DB    184 _T1CC0H	=	0x00db
                    00DC    185 Fsleep$T1CC1L$0$0 == 0x00dc
                    00DC    186 _T1CC1L	=	0x00dc
                    00DD    187 Fsleep$T1CC1H$0$0 == 0x00dd
                    00DD    188 _T1CC1H	=	0x00dd
                    00DE    189 Fsleep$T1CC2L$0$0 == 0x00de
                    00DE    190 _T1CC2L	=	0x00de
                    00DF    191 Fsleep$T1CC2H$0$0 == 0x00df
                    00DF    192 _T1CC2H	=	0x00df
                    00E0    193 Fsleep$ACC$0$0 == 0x00e0
                    00E0    194 _ACC	=	0x00e0
                    00E1    195 Fsleep$RFST$0$0 == 0x00e1
                    00E1    196 _RFST	=	0x00e1
                    00E2    197 Fsleep$T1CNTL$0$0 == 0x00e2
                    00E2    198 _T1CNTL	=	0x00e2
                    00E3    199 Fsleep$T1CNTH$0$0 == 0x00e3
                    00E3    200 _T1CNTH	=	0x00e3
                    00E4    201 Fsleep$T1CTL$0$0 == 0x00e4
                    00E4    202 _T1CTL	=	0x00e4
                    00E5    203 Fsleep$T1CCTL0$0$0 == 0x00e5
                    00E5    204 _T1CCTL0	=	0x00e5
                    00E6    205 Fsleep$T1CCTL1$0$0 == 0x00e6
                    00E6    206 _T1CCTL1	=	0x00e6
                    00E7    207 Fsleep$T1CCTL2$0$0 == 0x00e7
                    00E7    208 _T1CCTL2	=	0x00e7
                    00E8    209 Fsleep$IRCON2$0$0 == 0x00e8
                    00E8    210 _IRCON2	=	0x00e8
                    00E9    211 Fsleep$RFIF$0$0 == 0x00e9
                    00E9    212 _RFIF	=	0x00e9
                    00EA    213 Fsleep$T4CNT$0$0 == 0x00ea
                    00EA    214 _T4CNT	=	0x00ea
                    00EB    215 Fsleep$T4CTL$0$0 == 0x00eb
                    00EB    216 _T4CTL	=	0x00eb
                    00EC    217 Fsleep$T4CCTL0$0$0 == 0x00ec
                    00EC    218 _T4CCTL0	=	0x00ec
                    00ED    219 Fsleep$T4CC0$0$0 == 0x00ed
                    00ED    220 _T4CC0	=	0x00ed
                    00EE    221 Fsleep$T4CCTL1$0$0 == 0x00ee
                    00EE    222 _T4CCTL1	=	0x00ee
                    00EF    223 Fsleep$T4CC1$0$0 == 0x00ef
                    00EF    224 _T4CC1	=	0x00ef
                    00F0    225 Fsleep$B$0$0 == 0x00f0
                    00F0    226 _B	=	0x00f0
                    00F1    227 Fsleep$PERCFG$0$0 == 0x00f1
                    00F1    228 _PERCFG	=	0x00f1
                    00F2    229 Fsleep$ADCCFG$0$0 == 0x00f2
                    00F2    230 _ADCCFG	=	0x00f2
                    00F3    231 Fsleep$P0SEL$0$0 == 0x00f3
                    00F3    232 _P0SEL	=	0x00f3
                    00F4    233 Fsleep$P1SEL$0$0 == 0x00f4
                    00F4    234 _P1SEL	=	0x00f4
                    00F5    235 Fsleep$P2SEL$0$0 == 0x00f5
                    00F5    236 _P2SEL	=	0x00f5
                    00F6    237 Fsleep$P1INP$0$0 == 0x00f6
                    00F6    238 _P1INP	=	0x00f6
                    00F7    239 Fsleep$P2INP$0$0 == 0x00f7
                    00F7    240 _P2INP	=	0x00f7
                    00F8    241 Fsleep$U1CSR$0$0 == 0x00f8
                    00F8    242 _U1CSR	=	0x00f8
                    00F9    243 Fsleep$U1DBUF$0$0 == 0x00f9
                    00F9    244 _U1DBUF	=	0x00f9
                    00FA    245 Fsleep$U1BAUD$0$0 == 0x00fa
                    00FA    246 _U1BAUD	=	0x00fa
                    00FB    247 Fsleep$U1UCR$0$0 == 0x00fb
                    00FB    248 _U1UCR	=	0x00fb
                    00FC    249 Fsleep$U1GCR$0$0 == 0x00fc
                    00FC    250 _U1GCR	=	0x00fc
                    00FD    251 Fsleep$P0DIR$0$0 == 0x00fd
                    00FD    252 _P0DIR	=	0x00fd
                    00FE    253 Fsleep$P1DIR$0$0 == 0x00fe
                    00FE    254 _P1DIR	=	0x00fe
                    00FF    255 Fsleep$P2DIR$0$0 == 0x00ff
                    00FF    256 _P2DIR	=	0x00ff
                    FFFFD5D4    257 Fsleep$DMA0CFG$0$0 == 0xffffd5d4
                    FFFFD5D4    258 _DMA0CFG	=	0xffffd5d4
                    FFFFD3D2    259 Fsleep$DMA1CFG$0$0 == 0xffffd3d2
                    FFFFD3D2    260 _DMA1CFG	=	0xffffd3d2
                    FFFFADAC    261 Fsleep$FADDR$0$0 == 0xffffadac
                    FFFFADAC    262 _FADDR	=	0xffffadac
                    FFFFBBBA    263 Fsleep$ADC$0$0 == 0xffffbbba
                    FFFFBBBA    264 _ADC	=	0xffffbbba
                    FFFFDBDA    265 Fsleep$T1CC0$0$0 == 0xffffdbda
                    FFFFDBDA    266 _T1CC0	=	0xffffdbda
                    FFFFDDDC    267 Fsleep$T1CC1$0$0 == 0xffffdddc
                    FFFFDDDC    268 _T1CC1	=	0xffffdddc
                    FFFFDFDE    269 Fsleep$T1CC2$0$0 == 0xffffdfde
                    FFFFDFDE    270 _T1CC2	=	0xffffdfde
                            271 ;--------------------------------------------------------
                            272 ; special function bits
                            273 ;--------------------------------------------------------
                            274 	.area RSEG    (ABS,DATA)
   0000                     275 	.org 0x0000
                    0080    276 Fsleep$P0_0$0$0 == 0x0080
                    0080    277 _P0_0	=	0x0080
                    0081    278 Fsleep$P0_1$0$0 == 0x0081
                    0081    279 _P0_1	=	0x0081
                    0082    280 Fsleep$P0_2$0$0 == 0x0082
                    0082    281 _P0_2	=	0x0082
                    0083    282 Fsleep$P0_3$0$0 == 0x0083
                    0083    283 _P0_3	=	0x0083
                    0084    284 Fsleep$P0_4$0$0 == 0x0084
                    0084    285 _P0_4	=	0x0084
                    0085    286 Fsleep$P0_5$0$0 == 0x0085
                    0085    287 _P0_5	=	0x0085
                    0086    288 Fsleep$P0_6$0$0 == 0x0086
                    0086    289 _P0_6	=	0x0086
                    0087    290 Fsleep$P0_7$0$0 == 0x0087
                    0087    291 _P0_7	=	0x0087
                    0088    292 Fsleep$_TCON_0$0$0 == 0x0088
                    0088    293 __TCON_0	=	0x0088
                    0089    294 Fsleep$RFTXRXIF$0$0 == 0x0089
                    0089    295 _RFTXRXIF	=	0x0089
                    008A    296 Fsleep$_TCON_2$0$0 == 0x008a
                    008A    297 __TCON_2	=	0x008a
                    008B    298 Fsleep$URX0IF$0$0 == 0x008b
                    008B    299 _URX0IF	=	0x008b
                    008C    300 Fsleep$_TCON_4$0$0 == 0x008c
                    008C    301 __TCON_4	=	0x008c
                    008D    302 Fsleep$ADCIF$0$0 == 0x008d
                    008D    303 _ADCIF	=	0x008d
                    008E    304 Fsleep$_TCON_6$0$0 == 0x008e
                    008E    305 __TCON_6	=	0x008e
                    008F    306 Fsleep$URX1IF$0$0 == 0x008f
                    008F    307 _URX1IF	=	0x008f
                    0090    308 Fsleep$P1_0$0$0 == 0x0090
                    0090    309 _P1_0	=	0x0090
                    0091    310 Fsleep$P1_1$0$0 == 0x0091
                    0091    311 _P1_1	=	0x0091
                    0092    312 Fsleep$P1_2$0$0 == 0x0092
                    0092    313 _P1_2	=	0x0092
                    0093    314 Fsleep$P1_3$0$0 == 0x0093
                    0093    315 _P1_3	=	0x0093
                    0094    316 Fsleep$P1_4$0$0 == 0x0094
                    0094    317 _P1_4	=	0x0094
                    0095    318 Fsleep$P1_5$0$0 == 0x0095
                    0095    319 _P1_5	=	0x0095
                    0096    320 Fsleep$P1_6$0$0 == 0x0096
                    0096    321 _P1_6	=	0x0096
                    0097    322 Fsleep$P1_7$0$0 == 0x0097
                    0097    323 _P1_7	=	0x0097
                    0098    324 Fsleep$ENCIF_0$0$0 == 0x0098
                    0098    325 _ENCIF_0	=	0x0098
                    0099    326 Fsleep$ENCIF_1$0$0 == 0x0099
                    0099    327 _ENCIF_1	=	0x0099
                    009A    328 Fsleep$_SOCON2$0$0 == 0x009a
                    009A    329 __SOCON2	=	0x009a
                    009B    330 Fsleep$_SOCON3$0$0 == 0x009b
                    009B    331 __SOCON3	=	0x009b
                    009C    332 Fsleep$_SOCON4$0$0 == 0x009c
                    009C    333 __SOCON4	=	0x009c
                    009D    334 Fsleep$_SOCON5$0$0 == 0x009d
                    009D    335 __SOCON5	=	0x009d
                    009E    336 Fsleep$_SOCON6$0$0 == 0x009e
                    009E    337 __SOCON6	=	0x009e
                    009F    338 Fsleep$_SOCON7$0$0 == 0x009f
                    009F    339 __SOCON7	=	0x009f
                    00A0    340 Fsleep$P2_0$0$0 == 0x00a0
                    00A0    341 _P2_0	=	0x00a0
                    00A1    342 Fsleep$P2_1$0$0 == 0x00a1
                    00A1    343 _P2_1	=	0x00a1
                    00A2    344 Fsleep$P2_2$0$0 == 0x00a2
                    00A2    345 _P2_2	=	0x00a2
                    00A3    346 Fsleep$P2_3$0$0 == 0x00a3
                    00A3    347 _P2_3	=	0x00a3
                    00A4    348 Fsleep$P2_4$0$0 == 0x00a4
                    00A4    349 _P2_4	=	0x00a4
                    00A5    350 Fsleep$P2_5$0$0 == 0x00a5
                    00A5    351 _P2_5	=	0x00a5
                    00A6    352 Fsleep$P2_6$0$0 == 0x00a6
                    00A6    353 _P2_6	=	0x00a6
                    00A7    354 Fsleep$P2_7$0$0 == 0x00a7
                    00A7    355 _P2_7	=	0x00a7
                    00A8    356 Fsleep$RFTXRXIE$0$0 == 0x00a8
                    00A8    357 _RFTXRXIE	=	0x00a8
                    00A9    358 Fsleep$ADCIE$0$0 == 0x00a9
                    00A9    359 _ADCIE	=	0x00a9
                    00AA    360 Fsleep$URX0IE$0$0 == 0x00aa
                    00AA    361 _URX0IE	=	0x00aa
                    00AB    362 Fsleep$URX1IE$0$0 == 0x00ab
                    00AB    363 _URX1IE	=	0x00ab
                    00AC    364 Fsleep$ENCIE$0$0 == 0x00ac
                    00AC    365 _ENCIE	=	0x00ac
                    00AD    366 Fsleep$STIE$0$0 == 0x00ad
                    00AD    367 _STIE	=	0x00ad
                    00AE    368 Fsleep$_IEN06$0$0 == 0x00ae
                    00AE    369 __IEN06	=	0x00ae
                    00AF    370 Fsleep$EA$0$0 == 0x00af
                    00AF    371 _EA	=	0x00af
                    00B8    372 Fsleep$DMAIE$0$0 == 0x00b8
                    00B8    373 _DMAIE	=	0x00b8
                    00B9    374 Fsleep$T1IE$0$0 == 0x00b9
                    00B9    375 _T1IE	=	0x00b9
                    00BA    376 Fsleep$T2IE$0$0 == 0x00ba
                    00BA    377 _T2IE	=	0x00ba
                    00BB    378 Fsleep$T3IE$0$0 == 0x00bb
                    00BB    379 _T3IE	=	0x00bb
                    00BC    380 Fsleep$T4IE$0$0 == 0x00bc
                    00BC    381 _T4IE	=	0x00bc
                    00BD    382 Fsleep$P0IE$0$0 == 0x00bd
                    00BD    383 _P0IE	=	0x00bd
                    00BE    384 Fsleep$_IEN16$0$0 == 0x00be
                    00BE    385 __IEN16	=	0x00be
                    00BF    386 Fsleep$_IEN17$0$0 == 0x00bf
                    00BF    387 __IEN17	=	0x00bf
                    00C0    388 Fsleep$DMAIF$0$0 == 0x00c0
                    00C0    389 _DMAIF	=	0x00c0
                    00C1    390 Fsleep$T1IF$0$0 == 0x00c1
                    00C1    391 _T1IF	=	0x00c1
                    00C2    392 Fsleep$T2IF$0$0 == 0x00c2
                    00C2    393 _T2IF	=	0x00c2
                    00C3    394 Fsleep$T3IF$0$0 == 0x00c3
                    00C3    395 _T3IF	=	0x00c3
                    00C4    396 Fsleep$T4IF$0$0 == 0x00c4
                    00C4    397 _T4IF	=	0x00c4
                    00C5    398 Fsleep$P0IF$0$0 == 0x00c5
                    00C5    399 _P0IF	=	0x00c5
                    00C6    400 Fsleep$_IRCON6$0$0 == 0x00c6
                    00C6    401 __IRCON6	=	0x00c6
                    00C7    402 Fsleep$STIF$0$0 == 0x00c7
                    00C7    403 _STIF	=	0x00c7
                    00D0    404 Fsleep$P$0$0 == 0x00d0
                    00D0    405 _P	=	0x00d0
                    00D1    406 Fsleep$F1$0$0 == 0x00d1
                    00D1    407 _F1	=	0x00d1
                    00D2    408 Fsleep$OV$0$0 == 0x00d2
                    00D2    409 _OV	=	0x00d2
                    00D3    410 Fsleep$RS0$0$0 == 0x00d3
                    00D3    411 _RS0	=	0x00d3
                    00D4    412 Fsleep$RS1$0$0 == 0x00d4
                    00D4    413 _RS1	=	0x00d4
                    00D5    414 Fsleep$F0$0$0 == 0x00d5
                    00D5    415 _F0	=	0x00d5
                    00D6    416 Fsleep$AC$0$0 == 0x00d6
                    00D6    417 _AC	=	0x00d6
                    00D7    418 Fsleep$CY$0$0 == 0x00d7
                    00D7    419 _CY	=	0x00d7
                    00D8    420 Fsleep$T3OVFIF$0$0 == 0x00d8
                    00D8    421 _T3OVFIF	=	0x00d8
                    00D9    422 Fsleep$T3CH0IF$0$0 == 0x00d9
                    00D9    423 _T3CH0IF	=	0x00d9
                    00DA    424 Fsleep$T3CH1IF$0$0 == 0x00da
                    00DA    425 _T3CH1IF	=	0x00da
                    00DB    426 Fsleep$T4OVFIF$0$0 == 0x00db
                    00DB    427 _T4OVFIF	=	0x00db
                    00DC    428 Fsleep$T4CH0IF$0$0 == 0x00dc
                    00DC    429 _T4CH0IF	=	0x00dc
                    00DD    430 Fsleep$T4CH1IF$0$0 == 0x00dd
                    00DD    431 _T4CH1IF	=	0x00dd
                    00DE    432 Fsleep$OVFIM$0$0 == 0x00de
                    00DE    433 _OVFIM	=	0x00de
                    00DF    434 Fsleep$_TIMIF7$0$0 == 0x00df
                    00DF    435 __TIMIF7	=	0x00df
                    00E0    436 Fsleep$ACC_0$0$0 == 0x00e0
                    00E0    437 _ACC_0	=	0x00e0
                    00E1    438 Fsleep$ACC_1$0$0 == 0x00e1
                    00E1    439 _ACC_1	=	0x00e1
                    00E2    440 Fsleep$ACC_2$0$0 == 0x00e2
                    00E2    441 _ACC_2	=	0x00e2
                    00E3    442 Fsleep$ACC_3$0$0 == 0x00e3
                    00E3    443 _ACC_3	=	0x00e3
                    00E4    444 Fsleep$ACC_4$0$0 == 0x00e4
                    00E4    445 _ACC_4	=	0x00e4
                    00E5    446 Fsleep$ACC_5$0$0 == 0x00e5
                    00E5    447 _ACC_5	=	0x00e5
                    00E6    448 Fsleep$ACC_6$0$0 == 0x00e6
                    00E6    449 _ACC_6	=	0x00e6
                    00E7    450 Fsleep$ACC_7$0$0 == 0x00e7
                    00E7    451 _ACC_7	=	0x00e7
                    00E8    452 Fsleep$P2IF$0$0 == 0x00e8
                    00E8    453 _P2IF	=	0x00e8
                    00E9    454 Fsleep$UTX0IF$0$0 == 0x00e9
                    00E9    455 _UTX0IF	=	0x00e9
                    00EA    456 Fsleep$UTX1IF$0$0 == 0x00ea
                    00EA    457 _UTX1IF	=	0x00ea
                    00EB    458 Fsleep$P1IF$0$0 == 0x00eb
                    00EB    459 _P1IF	=	0x00eb
                    00EC    460 Fsleep$WDTIF$0$0 == 0x00ec
                    00EC    461 _WDTIF	=	0x00ec
                    00ED    462 Fsleep$_IRCON25$0$0 == 0x00ed
                    00ED    463 __IRCON25	=	0x00ed
                    00EE    464 Fsleep$_IRCON26$0$0 == 0x00ee
                    00EE    465 __IRCON26	=	0x00ee
                    00EF    466 Fsleep$_IRCON27$0$0 == 0x00ef
                    00EF    467 __IRCON27	=	0x00ef
                    00F0    468 Fsleep$B_0$0$0 == 0x00f0
                    00F0    469 _B_0	=	0x00f0
                    00F1    470 Fsleep$B_1$0$0 == 0x00f1
                    00F1    471 _B_1	=	0x00f1
                    00F2    472 Fsleep$B_2$0$0 == 0x00f2
                    00F2    473 _B_2	=	0x00f2
                    00F3    474 Fsleep$B_3$0$0 == 0x00f3
                    00F3    475 _B_3	=	0x00f3
                    00F4    476 Fsleep$B_4$0$0 == 0x00f4
                    00F4    477 _B_4	=	0x00f4
                    00F5    478 Fsleep$B_5$0$0 == 0x00f5
                    00F5    479 _B_5	=	0x00f5
                    00F6    480 Fsleep$B_6$0$0 == 0x00f6
                    00F6    481 _B_6	=	0x00f6
                    00F7    482 Fsleep$B_7$0$0 == 0x00f7
                    00F7    483 _B_7	=	0x00f7
                    00F8    484 Fsleep$U1ACTIVE$0$0 == 0x00f8
                    00F8    485 _U1ACTIVE	=	0x00f8
                    00F9    486 Fsleep$U1TX_BYTE$0$0 == 0x00f9
                    00F9    487 _U1TX_BYTE	=	0x00f9
                    00FA    488 Fsleep$U1RX_BYTE$0$0 == 0x00fa
                    00FA    489 _U1RX_BYTE	=	0x00fa
                    00FB    490 Fsleep$U1ERR$0$0 == 0x00fb
                    00FB    491 _U1ERR	=	0x00fb
                    00FC    492 Fsleep$U1FE$0$0 == 0x00fc
                    00FC    493 _U1FE	=	0x00fc
                    00FD    494 Fsleep$U1SLAVE$0$0 == 0x00fd
                    00FD    495 _U1SLAVE	=	0x00fd
                    00FE    496 Fsleep$U1RE$0$0 == 0x00fe
                    00FE    497 _U1RE	=	0x00fe
                    00FF    498 Fsleep$U1MODE$0$0 == 0x00ff
                    00FF    499 _U1MODE	=	0x00ff
                            500 ;--------------------------------------------------------
                            501 ; overlayable register banks
                            502 ;--------------------------------------------------------
                            503 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     504 	.ds 8
                            505 	.area REG_BANK_1	(REL,OVR,DATA)
   0000                     506 	.ds 8
                            507 ;--------------------------------------------------------
                            508 ; internal ram data
                            509 ;--------------------------------------------------------
                            510 	.area DSEG    (DATA)
                            511 ;--------------------------------------------------------
                            512 ; overlayable items in internal ram 
                            513 ;--------------------------------------------------------
                            514 	.area OSEG    (OVR,DATA)
                            515 ;--------------------------------------------------------
                            516 ; indirectly addressable internal ram data
                            517 ;--------------------------------------------------------
                            518 	.area ISEG    (DATA)
                            519 ;--------------------------------------------------------
                            520 ; absolute internal ram data
                            521 ;--------------------------------------------------------
                            522 	.area IABS    (ABS,DATA)
                            523 	.area IABS    (ABS,DATA)
                            524 ;--------------------------------------------------------
                            525 ; bit data
                            526 ;--------------------------------------------------------
                            527 	.area BSEG    (BIT)
                    0000    528 Lsleep.sleepMode2$storedDma0Armed$1$1==.
   0000                     529 _sleepMode2_storedDma0Armed_1_1:
   0000                     530 	.ds 1
                    0001    531 Lsleep.sleepMode3$storedDma0Armed$1$1==.
   0001                     532 _sleepMode3_storedDma0Armed_1_1:
   0001                     533 	.ds 1
                            534 ;--------------------------------------------------------
                            535 ; paged external ram data
                            536 ;--------------------------------------------------------
                            537 	.area PSEG    (PAG,XDATA)
                            538 ;--------------------------------------------------------
                            539 ; external ram data
                            540 ;--------------------------------------------------------
                            541 	.area XSEG    (XDATA)
                    DF00    542 Fsleep$SYNC1$0$0 == 0xdf00
                    DF00    543 _SYNC1	=	0xdf00
                    DF01    544 Fsleep$SYNC0$0$0 == 0xdf01
                    DF01    545 _SYNC0	=	0xdf01
                    DF02    546 Fsleep$PKTLEN$0$0 == 0xdf02
                    DF02    547 _PKTLEN	=	0xdf02
                    DF03    548 Fsleep$PKTCTRL1$0$0 == 0xdf03
                    DF03    549 _PKTCTRL1	=	0xdf03
                    DF04    550 Fsleep$PKTCTRL0$0$0 == 0xdf04
                    DF04    551 _PKTCTRL0	=	0xdf04
                    DF05    552 Fsleep$ADDR$0$0 == 0xdf05
                    DF05    553 _ADDR	=	0xdf05
                    DF06    554 Fsleep$CHANNR$0$0 == 0xdf06
                    DF06    555 _CHANNR	=	0xdf06
                    DF07    556 Fsleep$FSCTRL1$0$0 == 0xdf07
                    DF07    557 _FSCTRL1	=	0xdf07
                    DF08    558 Fsleep$FSCTRL0$0$0 == 0xdf08
                    DF08    559 _FSCTRL0	=	0xdf08
                    DF09    560 Fsleep$FREQ2$0$0 == 0xdf09
                    DF09    561 _FREQ2	=	0xdf09
                    DF0A    562 Fsleep$FREQ1$0$0 == 0xdf0a
                    DF0A    563 _FREQ1	=	0xdf0a
                    DF0B    564 Fsleep$FREQ0$0$0 == 0xdf0b
                    DF0B    565 _FREQ0	=	0xdf0b
                    DF0C    566 Fsleep$MDMCFG4$0$0 == 0xdf0c
                    DF0C    567 _MDMCFG4	=	0xdf0c
                    DF0D    568 Fsleep$MDMCFG3$0$0 == 0xdf0d
                    DF0D    569 _MDMCFG3	=	0xdf0d
                    DF0E    570 Fsleep$MDMCFG2$0$0 == 0xdf0e
                    DF0E    571 _MDMCFG2	=	0xdf0e
                    DF0F    572 Fsleep$MDMCFG1$0$0 == 0xdf0f
                    DF0F    573 _MDMCFG1	=	0xdf0f
                    DF10    574 Fsleep$MDMCFG0$0$0 == 0xdf10
                    DF10    575 _MDMCFG0	=	0xdf10
                    DF11    576 Fsleep$DEVIATN$0$0 == 0xdf11
                    DF11    577 _DEVIATN	=	0xdf11
                    DF12    578 Fsleep$MCSM2$0$0 == 0xdf12
                    DF12    579 _MCSM2	=	0xdf12
                    DF13    580 Fsleep$MCSM1$0$0 == 0xdf13
                    DF13    581 _MCSM1	=	0xdf13
                    DF14    582 Fsleep$MCSM0$0$0 == 0xdf14
                    DF14    583 _MCSM0	=	0xdf14
                    DF15    584 Fsleep$FOCCFG$0$0 == 0xdf15
                    DF15    585 _FOCCFG	=	0xdf15
                    DF16    586 Fsleep$BSCFG$0$0 == 0xdf16
                    DF16    587 _BSCFG	=	0xdf16
                    DF17    588 Fsleep$AGCCTRL2$0$0 == 0xdf17
                    DF17    589 _AGCCTRL2	=	0xdf17
                    DF18    590 Fsleep$AGCCTRL1$0$0 == 0xdf18
                    DF18    591 _AGCCTRL1	=	0xdf18
                    DF19    592 Fsleep$AGCCTRL0$0$0 == 0xdf19
                    DF19    593 _AGCCTRL0	=	0xdf19
                    DF1A    594 Fsleep$FREND1$0$0 == 0xdf1a
                    DF1A    595 _FREND1	=	0xdf1a
                    DF1B    596 Fsleep$FREND0$0$0 == 0xdf1b
                    DF1B    597 _FREND0	=	0xdf1b
                    DF1C    598 Fsleep$FSCAL3$0$0 == 0xdf1c
                    DF1C    599 _FSCAL3	=	0xdf1c
                    DF1D    600 Fsleep$FSCAL2$0$0 == 0xdf1d
                    DF1D    601 _FSCAL2	=	0xdf1d
                    DF1E    602 Fsleep$FSCAL1$0$0 == 0xdf1e
                    DF1E    603 _FSCAL1	=	0xdf1e
                    DF1F    604 Fsleep$FSCAL0$0$0 == 0xdf1f
                    DF1F    605 _FSCAL0	=	0xdf1f
                    DF23    606 Fsleep$TEST2$0$0 == 0xdf23
                    DF23    607 _TEST2	=	0xdf23
                    DF24    608 Fsleep$TEST1$0$0 == 0xdf24
                    DF24    609 _TEST1	=	0xdf24
                    DF25    610 Fsleep$TEST0$0$0 == 0xdf25
                    DF25    611 _TEST0	=	0xdf25
                    DF2E    612 Fsleep$PA_TABLE0$0$0 == 0xdf2e
                    DF2E    613 _PA_TABLE0	=	0xdf2e
                    DF2F    614 Fsleep$IOCFG2$0$0 == 0xdf2f
                    DF2F    615 _IOCFG2	=	0xdf2f
                    DF30    616 Fsleep$IOCFG1$0$0 == 0xdf30
                    DF30    617 _IOCFG1	=	0xdf30
                    DF31    618 Fsleep$IOCFG0$0$0 == 0xdf31
                    DF31    619 _IOCFG0	=	0xdf31
                    DF36    620 Fsleep$PARTNUM$0$0 == 0xdf36
                    DF36    621 _PARTNUM	=	0xdf36
                    DF37    622 Fsleep$VERSION$0$0 == 0xdf37
                    DF37    623 _VERSION	=	0xdf37
                    DF38    624 Fsleep$FREQEST$0$0 == 0xdf38
                    DF38    625 _FREQEST	=	0xdf38
                    DF39    626 Fsleep$LQI$0$0 == 0xdf39
                    DF39    627 _LQI	=	0xdf39
                    DF3A    628 Fsleep$RSSI$0$0 == 0xdf3a
                    DF3A    629 _RSSI	=	0xdf3a
                    DF3B    630 Fsleep$MARCSTATE$0$0 == 0xdf3b
                    DF3B    631 _MARCSTATE	=	0xdf3b
                    DF3C    632 Fsleep$PKTSTATUS$0$0 == 0xdf3c
                    DF3C    633 _PKTSTATUS	=	0xdf3c
                    DF3D    634 Fsleep$VCO_VC_DAC$0$0 == 0xdf3d
                    DF3D    635 _VCO_VC_DAC	=	0xdf3d
                    DF40    636 Fsleep$I2SCFG0$0$0 == 0xdf40
                    DF40    637 _I2SCFG0	=	0xdf40
                    DF41    638 Fsleep$I2SCFG1$0$0 == 0xdf41
                    DF41    639 _I2SCFG1	=	0xdf41
                    DF42    640 Fsleep$I2SDATL$0$0 == 0xdf42
                    DF42    641 _I2SDATL	=	0xdf42
                    DF43    642 Fsleep$I2SDATH$0$0 == 0xdf43
                    DF43    643 _I2SDATH	=	0xdf43
                    DF44    644 Fsleep$I2SWCNT$0$0 == 0xdf44
                    DF44    645 _I2SWCNT	=	0xdf44
                    DF45    646 Fsleep$I2SSTAT$0$0 == 0xdf45
                    DF45    647 _I2SSTAT	=	0xdf45
                    DF46    648 Fsleep$I2SCLKF0$0$0 == 0xdf46
                    DF46    649 _I2SCLKF0	=	0xdf46
                    DF47    650 Fsleep$I2SCLKF1$0$0 == 0xdf47
                    DF47    651 _I2SCLKF1	=	0xdf47
                    DF48    652 Fsleep$I2SCLKF2$0$0 == 0xdf48
                    DF48    653 _I2SCLKF2	=	0xdf48
                    DE00    654 Fsleep$USBADDR$0$0 == 0xde00
                    DE00    655 _USBADDR	=	0xde00
                    DE01    656 Fsleep$USBPOW$0$0 == 0xde01
                    DE01    657 _USBPOW	=	0xde01
                    DE02    658 Fsleep$USBIIF$0$0 == 0xde02
                    DE02    659 _USBIIF	=	0xde02
                    DE04    660 Fsleep$USBOIF$0$0 == 0xde04
                    DE04    661 _USBOIF	=	0xde04
                    DE06    662 Fsleep$USBCIF$0$0 == 0xde06
                    DE06    663 _USBCIF	=	0xde06
                    DE07    664 Fsleep$USBIIE$0$0 == 0xde07
                    DE07    665 _USBIIE	=	0xde07
                    DE09    666 Fsleep$USBOIE$0$0 == 0xde09
                    DE09    667 _USBOIE	=	0xde09
                    DE0B    668 Fsleep$USBCIE$0$0 == 0xde0b
                    DE0B    669 _USBCIE	=	0xde0b
                    DE0C    670 Fsleep$USBFRML$0$0 == 0xde0c
                    DE0C    671 _USBFRML	=	0xde0c
                    DE0D    672 Fsleep$USBFRMH$0$0 == 0xde0d
                    DE0D    673 _USBFRMH	=	0xde0d
                    DE0E    674 Fsleep$USBINDEX$0$0 == 0xde0e
                    DE0E    675 _USBINDEX	=	0xde0e
                    DE10    676 Fsleep$USBMAXI$0$0 == 0xde10
                    DE10    677 _USBMAXI	=	0xde10
                    DE11    678 Fsleep$USBCSIL$0$0 == 0xde11
                    DE11    679 _USBCSIL	=	0xde11
                    DE12    680 Fsleep$USBCSIH$0$0 == 0xde12
                    DE12    681 _USBCSIH	=	0xde12
                    DE13    682 Fsleep$USBMAXO$0$0 == 0xde13
                    DE13    683 _USBMAXO	=	0xde13
                    DE14    684 Fsleep$USBCSOL$0$0 == 0xde14
                    DE14    685 _USBCSOL	=	0xde14
                    DE15    686 Fsleep$USBCSOH$0$0 == 0xde15
                    DE15    687 _USBCSOH	=	0xde15
                    DE16    688 Fsleep$USBCNTL$0$0 == 0xde16
                    DE16    689 _USBCNTL	=	0xde16
                    DE17    690 Fsleep$USBCNTH$0$0 == 0xde17
                    DE17    691 _USBCNTH	=	0xde17
                    DE20    692 Fsleep$USBF0$0$0 == 0xde20
                    DE20    693 _USBF0	=	0xde20
                    DE22    694 Fsleep$USBF1$0$0 == 0xde22
                    DE22    695 _USBF1	=	0xde22
                    DE24    696 Fsleep$USBF2$0$0 == 0xde24
                    DE24    697 _USBF2	=	0xde24
                    DE26    698 Fsleep$USBF3$0$0 == 0xde26
                    DE26    699 _USBF3	=	0xde26
                    DE28    700 Fsleep$USBF4$0$0 == 0xde28
                    DE28    701 _USBF4	=	0xde28
                    DE2A    702 Fsleep$USBF5$0$0 == 0xde2a
                    DE2A    703 _USBF5	=	0xde2a
                            704 ;--------------------------------------------------------
                            705 ; absolute external ram data
                            706 ;--------------------------------------------------------
                            707 	.area XABS    (ABS,XDATA)
                            708 ;--------------------------------------------------------
                            709 ; external initialized ram data
                            710 ;--------------------------------------------------------
                            711 	.area XISEG   (XDATA)
                    0000    712 G$PM2_BUF$0$0==.
   0000                     713 _PM2_BUF::
   0000                     714 	.ds 7
                    0007    715 G$PM3_BUF$0$0==.
   0007                     716 _PM3_BUF::
   0007                     717 	.ds 7
                    000E    718 G$dmaDesc$0$0==.
   000E                     719 _dmaDesc::
   000E                     720 	.ds 8
                            721 	.area HOME    (CODE)
                            722 	.area GSINIT0 (CODE)
                            723 	.area GSINIT1 (CODE)
                            724 	.area GSINIT2 (CODE)
                            725 	.area GSINIT3 (CODE)
                            726 	.area GSINIT4 (CODE)
                            727 	.area GSINIT5 (CODE)
                            728 	.area GSINIT  (CODE)
                            729 	.area GSFINAL (CODE)
                            730 	.area CSEG    (CODE)
                            731 ;--------------------------------------------------------
                            732 ; global & static initialisations
                            733 ;--------------------------------------------------------
                            734 	.area HOME    (CODE)
                            735 	.area GSINIT  (CODE)
                            736 	.area GSFINAL (CODE)
                            737 	.area GSINIT  (CODE)
                            738 ;--------------------------------------------------------
                            739 ; Home
                            740 ;--------------------------------------------------------
                            741 	.area HOME    (CODE)
                            742 	.area HOME    (CODE)
                            743 ;--------------------------------------------------------
                            744 ; code
                            745 ;--------------------------------------------------------
                            746 	.area CSEG    (CODE)
                            747 ;------------------------------------------------------------
                            748 ;Allocation info for local variables in function 'sleepInit'
                            749 ;------------------------------------------------------------
                    0000    750 	G$sleepInit$0$0 ==.
                    0000    751 	C$sleep.c$15$0$0 ==.
                            752 ;	libraries/src/wixel/sleep.c:15: void sleepInit(void)
                            753 ;	-----------------------------------------
                            754 ;	 function sleepInit
                            755 ;	-----------------------------------------
   0000                     756 _sleepInit:
                    0007    757 	ar7 = 0x07
                    0006    758 	ar6 = 0x06
                    0005    759 	ar5 = 0x05
                    0004    760 	ar4 = 0x04
                    0003    761 	ar3 = 0x03
                    0002    762 	ar2 = 0x02
                    0001    763 	ar1 = 0x01
                    0000    764 	ar0 = 0x00
                    0000    765 	C$sleep.c$17$1$1 ==.
                            766 ;	libraries/src/wixel/sleep.c:17: WORIRQ  |= (1<<4); // Enable Event0 interrupt  
   0000 43 A1 10            767 	orl	_WORIRQ,#0x10
                    0003    768 	C$sleep.c$18$1$1 ==.
                    0003    769 	XG$sleepInit$0$0 ==.
   0003 22                  770 	ret
                            771 ;------------------------------------------------------------
                            772 ;Allocation info for local variables in function 'ISR_ST'
                            773 ;------------------------------------------------------------
                    0004    774 	G$ISR_ST$0$0 ==.
                    0004    775 	C$sleep.c$20$1$1 ==.
                            776 ;	libraries/src/wixel/sleep.c:20: ISR(ST, 1)
                            777 ;	-----------------------------------------
                            778 ;	 function ISR_ST
                            779 ;	-----------------------------------------
   0004                     780 _ISR_ST:
                    000F    781 	ar7 = 0x0F
                    000E    782 	ar6 = 0x0E
                    000D    783 	ar5 = 0x0D
                    000C    784 	ar4 = 0x0C
                    000B    785 	ar3 = 0x0B
                    000A    786 	ar2 = 0x0A
                    0009    787 	ar1 = 0x09
                    0008    788 	ar0 = 0x08
                    0004    789 	C$sleep.c$23$1$1 ==.
                            790 ;	libraries/src/wixel/sleep.c:23: IRCON &= 0x7F;
   0004 53 C0 7F            791 	anl	_IRCON,#0x7F
                    0007    792 	C$sleep.c$26$1$1 ==.
                            793 ;	libraries/src/wixel/sleep.c:26: WORIRQ &= 0xFE;
   0007 53 A1 FE            794 	anl	_WORIRQ,#0xFE
                    000A    795 	C$sleep.c$28$1$1 ==.
                            796 ;	libraries/src/wixel/sleep.c:28: SLEEP &= 0xFC; // Not required when resuming from PM0; Clear SLEEP.MODE[1:0]
   000A 53 BE FC            797 	anl	_SLEEP,#0xFC
                    000D    798 	C$sleep.c$29$1$1 ==.
                    000D    799 	XG$ISR_ST$0$0 ==.
   000D 32                  800 	reti
                            801 ;	eliminated unneeded mov psw,# (no regs used in bank)
                            802 ;	eliminated unneeded push/pop psw
                            803 ;	eliminated unneeded push/pop dpl
                            804 ;	eliminated unneeded push/pop dph
                            805 ;	eliminated unneeded push/pop b
                            806 ;	eliminated unneeded push/pop acc
                            807 ;------------------------------------------------------------
                            808 ;Allocation info for local variables in function 'switchToRCOSC'
                            809 ;------------------------------------------------------------
                    000E    810 	G$switchToRCOSC$0$0 ==.
                    000E    811 	C$sleep.c$31$1$1 ==.
                            812 ;	libraries/src/wixel/sleep.c:31: void switchToRCOSC(void)
                            813 ;	-----------------------------------------
                            814 ;	 function switchToRCOSC
                            815 ;	-----------------------------------------
   000E                     816 _switchToRCOSC:
                    0007    817 	ar7 = 0x07
                    0006    818 	ar6 = 0x06
                    0005    819 	ar5 = 0x05
                    0004    820 	ar4 = 0x04
                    0003    821 	ar3 = 0x03
                    0002    822 	ar2 = 0x02
                    0001    823 	ar1 = 0x01
                    0000    824 	ar0 = 0x00
                    000E    825 	C$sleep.c$34$1$1 ==.
                            826 ;	libraries/src/wixel/sleep.c:34: SLEEP &= ~0x04;
   000E AF BE               827 	mov	r7,_SLEEP
   0010 53 07 FB            828 	anl	ar7,#0xFB
   0013 8F BE               829 	mov	_SLEEP,r7
                    0015    830 	C$sleep.c$36$1$1 ==.
                            831 ;	libraries/src/wixel/sleep.c:36: while ( ! (SLEEP & 0x20) );
   0015                     832 00101$:
   0015 E5 BE               833 	mov	a,_SLEEP
   0017 30 E5 FB            834 	jnb	acc.5,00101$
                    001A    835 	C$sleep.c$39$1$1 ==.
                            836 ;	libraries/src/wixel/sleep.c:39: CLKCON = (CLKCON & ~0x07) | 0x40 | 0x01;
   001A AF C6               837 	mov	r7,_CLKCON
   001C 74 F8               838 	mov	a,#0xF8
   001E 5F                  839 	anl	a,r7
   001F 44 41               840 	orl	a,#0x41
   0021 FF                  841 	mov	r7,a
   0022 8F C6               842 	mov	_CLKCON,r7
                    0024    843 	C$sleep.c$41$1$1 ==.
                            844 ;	libraries/src/wixel/sleep.c:41: while ( !(CLKCON & 0x40) );
   0024                     845 00104$:
   0024 E5 C6               846 	mov	a,_CLKCON
   0026 30 E6 FB            847 	jnb	acc.6,00104$
                    0029    848 	C$sleep.c$43$1$1 ==.
                            849 ;	libraries/src/wixel/sleep.c:43: SLEEP |= 0x04;
   0029 43 BE 04            850 	orl	_SLEEP,#0x04
                    002C    851 	C$sleep.c$44$1$1 ==.
                    002C    852 	XG$switchToRCOSC$0$0 ==.
   002C 22                  853 	ret
                            854 ;------------------------------------------------------------
                            855 ;Allocation info for local variables in function 'sleepMode1'
                            856 ;------------------------------------------------------------
                    002D    857 	G$sleepMode1$0$0 ==.
                    002D    858 	C$sleep.c$46$1$1 ==.
                            859 ;	libraries/src/wixel/sleep.c:46: void sleepMode1(uint16 seconds)
                            860 ;	-----------------------------------------
                            861 ;	 function sleepMode1
                            862 ;	-----------------------------------------
   002D                     863 _sleepMode1:
   002D AE 82               864 	mov	r6,dpl
   002F AF 83               865 	mov	r7,dph
                    0031    866 	C$sleep.c$54$1$1 ==.
                            867 ;	libraries/src/wixel/sleep.c:54: WORCTRL |= 0x03; // WOR_RES[1:0]
   0031 43 A2 03            868 	orl	_WORCTRL,#0x03
                    0034    869 	C$sleep.c$57$1$1 ==.
                            870 ;	libraries/src/wixel/sleep.c:57: IEN0 |= 0xA0; // Set EA and STIE bits
   0034 43 A8 A0            871 	orl	_IEN0,#0xA0
                    0037    872 	C$sleep.c$59$1$1 ==.
                            873 ;	libraries/src/wixel/sleep.c:59: WORCTRL |= 0x04; // Reset Sleep Timer; WOR_RESET
   0037 43 A2 04            874 	orl	_WORCTRL,#0x04
                    003A    875 	C$sleep.c$60$1$1 ==.
                            876 ;	libraries/src/wixel/sleep.c:60: temp = WORTIME0;
   003A AD A5               877 	mov	r5,_WORTIME0
                    003C    878 	C$sleep.c$61$1$1 ==.
                            879 ;	libraries/src/wixel/sleep.c:61: while(temp == WORTIME0); // Wait until a positive 32 kHz edge
   003C                     880 00101$:
   003C ED                  881 	mov	a,r5
   003D B5 A5 02            882 	cjne	a,_WORTIME0,00116$
   0040 80 FA               883 	sjmp	00101$
   0042                     884 00116$:
                    0042    885 	C$sleep.c$62$1$1 ==.
                            886 ;	libraries/src/wixel/sleep.c:62: temp = WORTIME0;
   0042 AD A5               887 	mov	r5,_WORTIME0
                    0044    888 	C$sleep.c$63$1$1 ==.
                            889 ;	libraries/src/wixel/sleep.c:63: while(temp == WORTIME0); // Wait until a positive 32 kHz edge
   0044                     890 00104$:
   0044 ED                  891 	mov	a,r5
   0045 B5 A5 02            892 	cjne	a,_WORTIME0,00117$
   0048 80 FA               893 	sjmp	00104$
   004A                     894 00117$:
                    004A    895 	C$sleep.c$64$1$1 ==.
                            896 ;	libraries/src/wixel/sleep.c:64: WOREVT1 = desired_event0 >> 8; // Set EVENT0, high byte
   004A 8F A4               897 	mov	_WOREVT1,r7
                    004C    898 	C$sleep.c$65$1$1 ==.
                            899 ;	libraries/src/wixel/sleep.c:65: WOREVT0 = desired_event0; // Set EVENT0, low byte
   004C 8E A3               900 	mov	_WOREVT0,r6
                    004E    901 	C$sleep.c$68$1$1 ==.
                            902 ;	libraries/src/wixel/sleep.c:68: SLEEP = (SLEEP & 0xFC) | 0x01; // SLEEP.MODE[1:0]
   004E 74 FC               903 	mov	a,#0xFC
   0050 55 BE               904 	anl	a,_SLEEP
   0052 44 01               905 	orl	a,#0x01
   0054 F5 BE               906 	mov	_SLEEP,a
                    0056    907 	C$sleep.c$78$1$1 ==.
                            908 ;	libraries/src/wixel/sleep.c:78: __asm nop __endasm;
   0056 00                  909 	 nop 
                    0057    910 	C$sleep.c$79$1$1 ==.
                            911 ;	libraries/src/wixel/sleep.c:79: __asm nop __endasm;
   0057 00                  912 	 nop 
                    0058    913 	C$sleep.c$80$1$1 ==.
                            914 ;	libraries/src/wixel/sleep.c:80: __asm nop __endasm;
   0058 00                  915 	 nop 
                    0059    916 	C$sleep.c$88$1$1 ==.
                            917 ;	libraries/src/wixel/sleep.c:88: if (SLEEP & 0x03) // SLEEP.MODE[1:0]
   0059 E5 BE               918 	mov	a,_SLEEP
   005B 54 03               919 	anl	a,#0x03
   005D 60 04               920 	jz	00108$
                    005F    921 	C$sleep.c$91$2$2 ==.
                            922 ;	libraries/src/wixel/sleep.c:91: PCON |= 0x01;
   005F 43 87 01            923 	orl	_PCON,#0x01
                    0062    924 	C$sleep.c$94$2$2 ==.
                            925 ;	libraries/src/wixel/sleep.c:94: __asm nop __endasm;    
   0062 00                  926 	 nop 
   0063                     927 00108$:
                    0063    928 	C$sleep.c$98$1$1 ==.
                            929 ;	libraries/src/wixel/sleep.c:98: boardClockInit(); 
   0063 12s00r00            930 	lcall	_boardClockInit
                    0066    931 	C$sleep.c$99$1$1 ==.
                    0066    932 	XG$sleepMode1$0$0 ==.
   0066 22                  933 	ret
                            934 ;------------------------------------------------------------
                            935 ;Allocation info for local variables in function 'sleepMode2'
                            936 ;------------------------------------------------------------
                    0067    937 	G$sleepMode2$0$0 ==.
                    0067    938 	C$sleep.c$101$1$1 ==.
                            939 ;	libraries/src/wixel/sleep.c:101: void sleepMode2(uint16 seconds)
                            940 ;	-----------------------------------------
                            941 ;	 function sleepMode2
                            942 ;	-----------------------------------------
   0067                     943 _sleepMode2:
   0067 AE 82               944 	mov	r6,dpl
   0069 AF 83               945 	mov	r7,dph
                    006B    946 	C$sleep.c$113$1$1 ==.
                            947 ;	libraries/src/wixel/sleep.c:113: WORCTRL |= 0x03; 
   006B 43 A2 03            948 	orl	_WORCTRL,#0x03
                    006E    949 	C$sleep.c$115$1$1 ==.
                            950 ;	libraries/src/wixel/sleep.c:115: switchToRCOSC();
   006E C0 07               951 	push	ar7
   0070 C0 06               952 	push	ar6
   0072 12s00r0E            953 	lcall	_switchToRCOSC
   0075 D0 06               954 	pop	ar6
   0077 D0 07               955 	pop	ar7
                    0079    956 	C$sleep.c$124$1$1 ==.
                            957 ;	libraries/src/wixel/sleep.c:124: storedDescHigh = DMA0CFGH;
   0079 AD D5               958 	mov	r5,_DMA0CFGH
                    007B    959 	C$sleep.c$125$1$1 ==.
                            960 ;	libraries/src/wixel/sleep.c:125: storedDescLow = DMA0CFGL;
   007B AC D4               961 	mov	r4,_DMA0CFGL
                    007D    962 	C$sleep.c$126$1$1 ==.
                            963 ;	libraries/src/wixel/sleep.c:126: storedDma0Armed = DMAARM & 0x01;
   007D E5 D6               964 	mov	a,_DMAARM
   007F 54 01               965 	anl	a,#0x01
   0081 24 FF               966 	add	a,#0xff
   0083 92*00               967 	mov	_sleepMode2_storedDma0Armed_1_1,c
                    0085    968 	C$sleep.c$127$1$1 ==.
                            969 ;	libraries/src/wixel/sleep.c:127: DMAARM |= 0x81; // Abort transfers on DMA Channel 0; Set ABORT and DMAARM0
   0085 43 D6 81            970 	orl	_DMAARM,#0x81
                    0088    971 	C$sleep.c$129$1$1 ==.
                            972 ;	libraries/src/wixel/sleep.c:129: dmaDesc[0] = ((unsigned int)& PM2_BUF) >> 8;
   0088 7Ar00               973 	mov	r2,#_PM2_BUF
   008A 7Bs00               974 	mov	r3,#(_PM2_BUF >> 8)
   008C 8B 02               975 	mov	ar2,r3
   008E 90s00r0E            976 	mov	dptr,#_dmaDesc
   0091 EA                  977 	mov	a,r2
   0092 F0                  978 	movx	@dptr,a
                    0093    979 	C$sleep.c$130$1$1 ==.
                            980 ;	libraries/src/wixel/sleep.c:130: dmaDesc[1] = (unsigned int)& PM2_BUF;
   0093 7Ar00               981 	mov	r2,#_PM2_BUF
   0095 7Bs00               982 	mov	r3,#(_PM2_BUF >> 8)
   0097 90s00r0F            983 	mov	dptr,#(_dmaDesc + 0x0001)
   009A EA                  984 	mov	a,r2
   009B F0                  985 	movx	@dptr,a
                    009C    986 	C$sleep.c$132$1$1 ==.
                            987 ;	libraries/src/wixel/sleep.c:132: DMA0CFGH = ((unsigned int)&dmaDesc) >> 8;
   009C 7Ar0E               988 	mov	r2,#_dmaDesc
   009E 7Bs00               989 	mov	r3,#(_dmaDesc >> 8)
   00A0 8B D5               990 	mov	_DMA0CFGH,r3
                    00A2    991 	C$sleep.c$133$1$1 ==.
                            992 ;	libraries/src/wixel/sleep.c:133: DMA0CFGL = (unsigned int)&dmaDesc;
   00A2 7Ar0E               993 	mov	r2,#_dmaDesc
   00A4 7Bs00               994 	mov	r3,#(_dmaDesc >> 8)
   00A6 8A D4               995 	mov	_DMA0CFGL,r2
                    00A8    996 	C$sleep.c$134$1$1 ==.
                            997 ;	libraries/src/wixel/sleep.c:134: DMAARM = 0x01; // Arm Channel 0; DMAARM0
   00A8 75 D6 01            998 	mov	_DMAARM,#0x01
                    00AB    999 	C$sleep.c$137$1$1 ==.
                           1000 ;	libraries/src/wixel/sleep.c:137: storedIEN0 = IEN0;
   00AB AB A8              1001 	mov	r3,_IEN0
                    00AD   1002 	C$sleep.c$138$1$1 ==.
                           1003 ;	libraries/src/wixel/sleep.c:138: storedIEN1 = IEN1;
   00AD AA B8              1004 	mov	r2,_IEN1
                    00AF   1005 	C$sleep.c$139$1$1 ==.
                           1006 ;	libraries/src/wixel/sleep.c:139: storedIEN2 = IEN2; 
   00AF A9 9A              1007 	mov	r1,_IEN2
                    00B1   1008 	C$sleep.c$143$1$1 ==.
                           1009 ;	libraries/src/wixel/sleep.c:143: IEN0 |= 0xA0; // Set EA and STIE bits
   00B1 43 A8 A0           1010 	orl	_IEN0,#0xA0
                    00B4   1011 	C$sleep.c$146$1$1 ==.
                           1012 ;	libraries/src/wixel/sleep.c:146: IEN0 &= 0xA0;
   00B4 53 A8 A0           1013 	anl	_IEN0,#0xA0
                    00B7   1014 	C$sleep.c$147$1$1 ==.
                           1015 ;	libraries/src/wixel/sleep.c:147: IEN1 &= ~0x3F;
   00B7 A8 B8              1016 	mov	r0,_IEN1
   00B9 53 00 C0           1017 	anl	ar0,#0xC0
   00BC 88 B8              1018 	mov	_IEN1,r0
                    00BE   1019 	C$sleep.c$148$1$1 ==.
                           1020 ;	libraries/src/wixel/sleep.c:148: IEN2 &= ~0x3F;
   00BE A8 9A              1021 	mov	r0,_IEN2
   00C0 53 00 C0           1022 	anl	ar0,#0xC0
   00C3 88 9A              1023 	mov	_IEN2,r0
                    00C5   1024 	C$sleep.c$150$1$1 ==.
                           1025 ;	libraries/src/wixel/sleep.c:150: WORCTRL |= 0x04; // Reset Sleep Timer
   00C5 43 A2 04           1026 	orl	_WORCTRL,#0x04
                    00C8   1027 	C$sleep.c$151$1$1 ==.
                           1028 ;	libraries/src/wixel/sleep.c:151: temp = WORTIME0;
   00C8 A8 A5              1029 	mov	r0,_WORTIME0
                    00CA   1030 	C$sleep.c$152$1$1 ==.
                           1031 ;	libraries/src/wixel/sleep.c:152: while(temp == WORTIME0); // Wait until a positive 32 kHz edge
   00CA                    1032 00101$:
   00CA E8                 1033 	mov	a,r0
   00CB B5 A5 02           1034 	cjne	a,_WORTIME0,00119$
   00CE 80 FA              1035 	sjmp	00101$
   00D0                    1036 00119$:
                    00D0   1037 	C$sleep.c$153$1$1 ==.
                           1038 ;	libraries/src/wixel/sleep.c:153: temp = WORTIME0;
   00D0 A8 A5              1039 	mov	r0,_WORTIME0
                    00D2   1040 	C$sleep.c$154$1$1 ==.
                           1041 ;	libraries/src/wixel/sleep.c:154: while(temp == WORTIME0); // Wait until a positive 32 kHz edge
   00D2                    1042 00104$:
   00D2 E8                 1043 	mov	a,r0
   00D3 B5 A5 02           1044 	cjne	a,_WORTIME0,00120$
   00D6 80 FA              1045 	sjmp	00104$
   00D8                    1046 00120$:
                    00D8   1047 	C$sleep.c$155$1$1 ==.
                           1048 ;	libraries/src/wixel/sleep.c:155: WOREVT1 = desired_event0 >> 8; // Set EVENT0, high byte
   00D8 8F A4              1049 	mov	_WOREVT1,r7
                    00DA   1050 	C$sleep.c$156$1$1 ==.
                           1051 ;	libraries/src/wixel/sleep.c:156: WOREVT0 = desired_event0; // Set EVENT0, low byte
   00DA 8E A3              1052 	mov	_WOREVT0,r6
                    00DC   1053 	C$sleep.c$158$1$1 ==.
                           1054 ;	libraries/src/wixel/sleep.c:158: MEMCTR |= 0x02;  // Flash cache must be disabled.
   00DC 43 C7 02           1055 	orl	_MEMCTR,#0x02
                    00DF   1056 	C$sleep.c$159$1$1 ==.
                           1057 ;	libraries/src/wixel/sleep.c:159: SLEEP = 0x06; // PM2, disable USB, power down other oscillators
   00DF 75 BE 06           1058 	mov	_SLEEP,#0x06
                    00E2   1059 	C$sleep.c$161$1$1 ==.
                           1060 ;	libraries/src/wixel/sleep.c:161: __asm nop __endasm; 
   00E2 00                 1061 	 nop 
                    00E3   1062 	C$sleep.c$162$1$1 ==.
                           1063 ;	libraries/src/wixel/sleep.c:162: __asm nop __endasm; 
   00E3 00                 1064 	 nop 
                    00E4   1065 	C$sleep.c$163$1$1 ==.
                           1066 ;	libraries/src/wixel/sleep.c:163: __asm nop __endasm;
   00E4 00                 1067 	 nop 
                    00E5   1068 	C$sleep.c$165$1$1 ==.
                           1069 ;	libraries/src/wixel/sleep.c:165: if (SLEEP & 0x03)
   00E5 E5 BE              1070 	mov	a,_SLEEP
   00E7 54 03              1071 	anl	a,#0x03
   00E9 60 08              1072 	jz	00108$
                    00EB   1073 	C$sleep.c$167$2$2 ==.
                           1074 ;	libraries/src/wixel/sleep.c:167: __asm mov 0xD7,#0x01 __endasm; // DMAREQ = 0x01;
   00EB 75 D7 01           1075 	 mov 0xD7,#0x01 
                    00EE   1076 	C$sleep.c$168$2$2 ==.
                           1077 ;	libraries/src/wixel/sleep.c:168: __asm nop __endasm;            // Needed to perfectly align the DMA transfer.
   00EE 00                 1078 	 nop 
                    00EF   1079 	C$sleep.c$169$2$2 ==.
                           1080 ;	libraries/src/wixel/sleep.c:169: __asm orl 0x87,#0x01 __endasm; // PCON |= 0x01;
   00EF 43 87 01           1081 	 orl 0x87,#0x01 
                    00F2   1082 	C$sleep.c$170$2$2 ==.
                           1083 ;	libraries/src/wixel/sleep.c:170: __asm nop __endasm;      
   00F2 00                 1084 	 nop 
   00F3                    1085 00108$:
                    00F3   1086 	C$sleep.c$174$1$1 ==.
                           1087 ;	libraries/src/wixel/sleep.c:174: IEN0 = storedIEN0;
   00F3 8B A8              1088 	mov	_IEN0,r3
                    00F5   1089 	C$sleep.c$175$1$1 ==.
                           1090 ;	libraries/src/wixel/sleep.c:175: IEN1 = storedIEN1;
   00F5 8A B8              1091 	mov	_IEN1,r2
                    00F7   1092 	C$sleep.c$176$1$1 ==.
                           1093 ;	libraries/src/wixel/sleep.c:176: IEN2 = storedIEN2; 
   00F7 89 9A              1094 	mov	_IEN2,r1
                    00F9   1095 	C$sleep.c$179$1$1 ==.
                           1096 ;	libraries/src/wixel/sleep.c:179: DMA0CFGH = storedDescHigh;
   00F9 8D D5              1097 	mov	_DMA0CFGH,r5
                    00FB   1098 	C$sleep.c$180$1$1 ==.
                           1099 ;	libraries/src/wixel/sleep.c:180: DMA0CFGL = storedDescLow;
   00FB 8C D4              1100 	mov	_DMA0CFGL,r4
                    00FD   1101 	C$sleep.c$181$1$1 ==.
                           1102 ;	libraries/src/wixel/sleep.c:181: if (storedDma0Armed)
   00FD 30*00 03           1103 	jnb	_sleepMode2_storedDma0Armed_1_1,00110$
                    0100   1104 	C$sleep.c$182$1$1 ==.
                           1105 ;	libraries/src/wixel/sleep.c:182: DMAARM |= 0x01; // Set DMA0ARM
   0100 43 D6 01           1106 	orl	_DMAARM,#0x01
   0103                    1107 00110$:
                    0103   1108 	C$sleep.c$185$1$1 ==.
                           1109 ;	libraries/src/wixel/sleep.c:185: boardClockInit();   
   0103 12s00r00           1110 	lcall	_boardClockInit
                    0106   1111 	C$sleep.c$186$1$1 ==.
                    0106   1112 	XG$sleepMode2$0$0 ==.
   0106 22                 1113 	ret
                           1114 ;------------------------------------------------------------
                           1115 ;Allocation info for local variables in function 'sleepMode3'
                           1116 ;------------------------------------------------------------
                    0107   1117 	G$sleepMode3$0$0 ==.
                    0107   1118 	C$sleep.c$189$1$1 ==.
                           1119 ;	libraries/src/wixel/sleep.c:189: void sleepMode3(void)
                           1120 ;	-----------------------------------------
                           1121 ;	 function sleepMode3
                           1122 ;	-----------------------------------------
   0107                    1123 _sleepMode3:
                    0107   1124 	C$sleep.c$195$1$1 ==.
                           1125 ;	libraries/src/wixel/sleep.c:195: WORCTRL |= 0x03; 
   0107 43 A2 03           1126 	orl	_WORCTRL,#0x03
                    010A   1127 	C$sleep.c$197$1$1 ==.
                           1128 ;	libraries/src/wixel/sleep.c:197: switchToRCOSC();
   010A 12s00r0E           1129 	lcall	_switchToRCOSC
                    010D   1130 	C$sleep.c$206$1$1 ==.
                           1131 ;	libraries/src/wixel/sleep.c:206: storedDescHigh = DMA0CFGH;
   010D AF D5              1132 	mov	r7,_DMA0CFGH
                    010F   1133 	C$sleep.c$207$1$1 ==.
                           1134 ;	libraries/src/wixel/sleep.c:207: storedDescLow = DMA0CFGL;
   010F AE D4              1135 	mov	r6,_DMA0CFGL
                    0111   1136 	C$sleep.c$208$1$1 ==.
                           1137 ;	libraries/src/wixel/sleep.c:208: storedDma0Armed = DMAARM & 0x01;
   0111 E5 D6              1138 	mov	a,_DMAARM
   0113 54 01              1139 	anl	a,#0x01
   0115 24 FF              1140 	add	a,#0xff
   0117 92*01              1141 	mov	_sleepMode3_storedDma0Armed_1_1,c
                    0119   1142 	C$sleep.c$209$1$1 ==.
                           1143 ;	libraries/src/wixel/sleep.c:209: DMAARM |= 0x81; // Abort transfers on DMA Channel 0; Set ABORT and DMAARM0
   0119 43 D6 81           1144 	orl	_DMAARM,#0x81
                    011C   1145 	C$sleep.c$211$1$1 ==.
                           1146 ;	libraries/src/wixel/sleep.c:211: dmaDesc[0] = ((unsigned int)& PM3_BUF) >> 8;
   011C 7Cr07              1147 	mov	r4,#_PM3_BUF
   011E 7Ds00              1148 	mov	r5,#(_PM3_BUF >> 8)
   0120 8D 04              1149 	mov	ar4,r5
   0122 90s00r0E           1150 	mov	dptr,#_dmaDesc
   0125 EC                 1151 	mov	a,r4
   0126 F0                 1152 	movx	@dptr,a
                    0127   1153 	C$sleep.c$212$1$1 ==.
                           1154 ;	libraries/src/wixel/sleep.c:212: dmaDesc[1] = (unsigned int)& PM3_BUF;
   0127 7Cr07              1155 	mov	r4,#_PM3_BUF
   0129 7Ds00              1156 	mov	r5,#(_PM3_BUF >> 8)
   012B 90s00r0F           1157 	mov	dptr,#(_dmaDesc + 0x0001)
   012E EC                 1158 	mov	a,r4
   012F F0                 1159 	movx	@dptr,a
                    0130   1160 	C$sleep.c$214$1$1 ==.
                           1161 ;	libraries/src/wixel/sleep.c:214: DMA0CFGH = ((unsigned int)&dmaDesc) >> 8;
   0130 7Cr0E              1162 	mov	r4,#_dmaDesc
   0132 7Ds00              1163 	mov	r5,#(_dmaDesc >> 8)
   0134 8D D5              1164 	mov	_DMA0CFGH,r5
                    0136   1165 	C$sleep.c$215$1$1 ==.
                           1166 ;	libraries/src/wixel/sleep.c:215: DMA0CFGL = (unsigned int)&dmaDesc;
   0136 7Cr0E              1167 	mov	r4,#_dmaDesc
   0138 7Ds00              1168 	mov	r5,#(_dmaDesc >> 8)
   013A 8C D4              1169 	mov	_DMA0CFGL,r4
                    013C   1170 	C$sleep.c$216$1$1 ==.
                           1171 ;	libraries/src/wixel/sleep.c:216: DMAARM = 0x01; // Arm Channel 0; DMAARM0
   013C 75 D6 01           1172 	mov	_DMAARM,#0x01
                    013F   1173 	C$sleep.c$219$1$1 ==.
                           1174 ;	libraries/src/wixel/sleep.c:219: IEN0 |= (1<<7);
   013F 43 A8 80           1175 	orl	_IEN0,#0x80
                    0142   1176 	C$sleep.c$221$1$1 ==.
                           1177 ;	libraries/src/wixel/sleep.c:221: MEMCTR |= 0x02;  // Flash cache must be disabled.
   0142 43 C7 02           1178 	orl	_MEMCTR,#0x02
                    0145   1179 	C$sleep.c$222$1$1 ==.
                           1180 ;	libraries/src/wixel/sleep.c:222: SLEEP = 0x07; // PM3, disable USB, power down other oscillators
   0145 75 BE 07           1181 	mov	_SLEEP,#0x07
                    0148   1182 	C$sleep.c$224$1$1 ==.
                           1183 ;	libraries/src/wixel/sleep.c:224: __asm nop __endasm; 
   0148 00                 1184 	 nop 
                    0149   1185 	C$sleep.c$225$1$1 ==.
                           1186 ;	libraries/src/wixel/sleep.c:225: __asm nop __endasm; 
   0149 00                 1187 	 nop 
                    014A   1188 	C$sleep.c$226$1$1 ==.
                           1189 ;	libraries/src/wixel/sleep.c:226: __asm nop __endasm;
   014A 00                 1190 	 nop 
                    014B   1191 	C$sleep.c$228$1$1 ==.
                           1192 ;	libraries/src/wixel/sleep.c:228: if (SLEEP & 0x03)
   014B E5 BE              1193 	mov	a,_SLEEP
   014D 54 03              1194 	anl	a,#0x03
   014F 60 08              1195 	jz	00102$
                    0151   1196 	C$sleep.c$230$2$2 ==.
                           1197 ;	libraries/src/wixel/sleep.c:230: __asm mov 0xD7,#0x01 __endasm; // DMAREQ = 0x01;
   0151 75 D7 01           1198 	 mov 0xD7,#0x01 
                    0154   1199 	C$sleep.c$231$2$2 ==.
                           1200 ;	libraries/src/wixel/sleep.c:231: __asm nop __endasm;            // Needed to perfectly align the DMA transfer.
   0154 00                 1201 	 nop 
                    0155   1202 	C$sleep.c$232$2$2 ==.
                           1203 ;	libraries/src/wixel/sleep.c:232: __asm orl 0x87,#0x01 __endasm; // PCON |= 0x01;
   0155 43 87 01           1204 	 orl 0x87,#0x01 
                    0158   1205 	C$sleep.c$233$2$2 ==.
                           1206 ;	libraries/src/wixel/sleep.c:233: __asm nop __endasm;      
   0158 00                 1207 	 nop 
   0159                    1208 00102$:
                    0159   1209 	C$sleep.c$237$1$1 ==.
                           1210 ;	libraries/src/wixel/sleep.c:237: DMA0CFGH = storedDescHigh;
   0159 8F D5              1211 	mov	_DMA0CFGH,r7
                    015B   1212 	C$sleep.c$238$1$1 ==.
                           1213 ;	libraries/src/wixel/sleep.c:238: DMA0CFGL = storedDescLow;
   015B 8E D4              1214 	mov	_DMA0CFGL,r6
                    015D   1215 	C$sleep.c$239$1$1 ==.
                           1216 ;	libraries/src/wixel/sleep.c:239: if (storedDma0Armed)
   015D 30*01 03           1217 	jnb	_sleepMode3_storedDma0Armed_1_1,00104$
                    0160   1218 	C$sleep.c$240$1$1 ==.
                           1219 ;	libraries/src/wixel/sleep.c:240: DMAARM |= 0x01; // Set DMA0ARM
   0160 43 D6 01           1220 	orl	_DMAARM,#0x01
   0163                    1221 00104$:
                    0163   1222 	C$sleep.c$243$1$1 ==.
                           1223 ;	libraries/src/wixel/sleep.c:243: boardClockInit();    
   0163 12s00r00           1224 	lcall	_boardClockInit
                    0166   1225 	C$sleep.c$244$1$1 ==.
                    0166   1226 	XG$sleepMode3$0$0 ==.
   0166 22                 1227 	ret
                           1228 	.area CSEG    (CODE)
                           1229 	.area CONST   (CODE)
                           1230 	.area XINIT   (CODE)
                    0000   1231 Fsleep$__xinit_PM2_BUF$0$0 == .
   0000                    1232 __xinit__PM2_BUF:
   0000 06                 1233 	.db #0x06	; 6
   0001 06                 1234 	.db #0x06	; 6
   0002 06                 1235 	.db #0x06	; 6
   0003 06                 1236 	.db #0x06	; 6
   0004 06                 1237 	.db #0x06	; 6
   0005 06                 1238 	.db #0x06	; 6
   0006 04                 1239 	.db #0x04	; 4
                    0007   1240 Fsleep$__xinit_PM3_BUF$0$0 == .
   0007                    1241 __xinit__PM3_BUF:
   0007 07                 1242 	.db #0x07	; 7
   0008 07                 1243 	.db #0x07	; 7
   0009 07                 1244 	.db #0x07	; 7
   000A 07                 1245 	.db #0x07	; 7
   000B 07                 1246 	.db #0x07	; 7
   000C 07                 1247 	.db #0x07	; 7
   000D 04                 1248 	.db #0x04	; 4
                    000E   1249 Fsleep$__xinit_dmaDesc$0$0 == .
   000E                    1250 __xinit__dmaDesc:
   000E 00                 1251 	.db #0x00	; 0
   000F 00                 1252 	.db #0x00	; 0
   0010 DF                 1253 	.db #0xDF	; 223
   0011 BE                 1254 	.db #0xBE	; 190
   0012 00                 1255 	.db #0x00	; 0
   0013 07                 1256 	.db #0x07	; 7
   0014 20                 1257 	.db #0x20	; 32
   0015 42                 1258 	.db #0x42	; 66	'B'
                           1259 	.area CABS    (ABS,CODE)
